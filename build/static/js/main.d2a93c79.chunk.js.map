{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","updatedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","createdNote","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"qNAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACjB,gBAAkB,YACpB,OACE,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCPtCK,EAAU,sDAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCF5BK,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACO,KAGP,yBAAKd,UAAU,SACVc,ICQIC,EAdA,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,uGCyESC,EA9EH,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGcF,mBAAS,IAHvB,mBAGTG,EAHS,KAGAC,EAHA,OAIcJ,oBAAS,GAJvB,mBAITK,EAJS,KAIAC,EAJA,OAKwBN,mBAAS,MALjC,mBAKTO,EALS,KAKKC,EALL,KAOhBC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GAAY,OAAIT,EAASS,QAChC,IAEH,IAmCMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAE9B,OACI,6BACE,qCACA,kBAAC,EAAD,CAAce,QAASc,IACvB,6BACE,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACKO,EAAYE,KAAI,SAAAvC,GAAI,OACrB,kBAAC,EAAD,CACEwC,IAAKxC,EAAKe,GACVf,KAAMA,EACNC,iBAAkB,kBArDH,SAAAc,GACzB,IAAMf,EAAO0B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAE3B,KAAOA,KAChC4B,EAAW,eAAQ3C,EAAR,CAAcG,WAAYH,EAAKG,YAEhDgC,EACUpB,EAAI4B,GACXjC,MAAK,SAAAkC,GACJjB,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO4C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,aAAD,OAAcjC,EAAKK,QAAnB,sCACf0C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAE3B,KAAOA,SAuCNiC,CAAmBhD,EAAKe,WAGtD,0BAAMkC,SAtCI,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB/C,QAASuB,EACTyB,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAE7BtB,EACUiB,GACP1C,MAAK,SAAAgD,GACJ/B,EAASD,EAAMiC,OAAOD,IACtB7B,EAAW,SA4BT,2BAAO+B,MAAOhC,EAASiC,SAxBN,SAAAX,GAAK,OAAIrB,EAAWqB,EAAMY,OAAOF,UAyBlD,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MC1ERC,IAASC,OACP,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.d2a93c79.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n  ? 'not important' : 'important'\n  return(\n    <li className='note'>\n        {note.content}\n        <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios';\nconst baseUrl = 'https://calm-mountain-33469.herokuapp.com/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n      return null\n  }\n  return (\n      <div className=\"error\">\n          {message}\n      </div>\n  )\n}\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => setNotes(initialNotes))\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(updatedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`The note '${note.content}' was already deleted from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000) \n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n    noteService\n      .create(noteObject)\n      .then(createdNote => {\n        setNotes(notes.concat(createdNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = event => setNewNote(event.target.value)\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n      <div>\n        <h1>notes</h1>\n        <Notification message={errorMessage} />\n        <div>\n          <button onClick={() => setShowAll(!showAll)}>\n            show {showAll ? 'important' : 'all'}\n          </button>\n        </div>\n        <ul>\n            {notesToShow.map(note => \n            <Note \n              key={note.id}\n              note={note}\n              toggleImportance={() => toggleImportanceOf(note.id)}/>\n            )}\n        </ul>\n        <form onSubmit={addNote}>\n          <input value={newNote} onChange={handleNoteChange} />\n          <button type=\"submit\">save</button>\n        </form>\n        <Footer />\n      </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\ndocument.getElementById('root')\n);\n\n"],"sourceRoot":""}